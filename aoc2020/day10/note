0 1 4 5 6 7 10 11 12 15 16 19 22

0 1 2 3 4 5  6  7  8  9 10 11 12 13

0  [1,0,0,0,0,0,0,0,0,0,0,0]
1  [1,1,0,0,0,0,0,0,0,0,0,0]
4  [1,1,1,0,0,0,0,0,0,0,0,0]
5  [1,1,1,1,1,1,0,0,0,0,0,0]
6  [1,1,1,1,2,2,0,0,0,0,0,0]
7  [1,1,1,1,2,4,0,0,0,0,0,0]
10 [1,0,0,0,0,0,0,0,0,0,0,0]
11 [1,0,0,0,0,0,0,0,0,0,0,0]
12 [1,0,0,0,0,0,0,0,0,0,0,0]
13 [1,0,0,0,0,0,0,0,0,0,0,0]
14 [1,0,0,0,0,0,0,0,0,0,0,0]
15 [1,0,0,0,0,0,0,0,0,0,0,0]


0 1 4 [5, 6] 7 10 [11] 12 15 16 29 22

(0), 1, 2, 3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20

0 1 2 3 4 5 6 7 8 9 10

fn recur(acc, nums) {

  a nums[0]
  b nums[1]
  c nums[2]
  d nums[3]

  if b - a < 3 {
    acc = 1 + recur(acc, num[1..])
  }
  if c - a < 3 {
    acc = 1 + recur(acc, num[2..])
  }
  if d - a < 3 {
    acc = 1 + recur(acc, num[3..])
  }
  acc
}


0 1 2 4
0 1   4
0   2 4m

0 1 2 3 4 5
0 1 2 3   5
0 1 2   4 5
0 1   3 4 5
0 1   3   5
0 1     4 5
0   2 3 4 5
0   2 3   5
0   2   4 5
0   2     5
0     3 4 5
0     3   5




  1 2 3 4 5
  1 2 3   5
  1 2     5
0 1 2   4 5
  1   3 4 5
  1   3   5
  1     4 5
    2 3 4 5
    2 3   5
    2   4 5
    2     5
      3 4 5
      3   5

